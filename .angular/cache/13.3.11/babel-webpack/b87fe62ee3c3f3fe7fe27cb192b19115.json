{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@tinymce/tinymce-angular\";\nimport * as i5 from \"@angular/common\";\n\nfunction AdminAddProductsComponent_option_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", category_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r3.name, \" \");\n  }\n}\n\nfunction AdminAddProductsComponent_ng_container_63_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 28)(2, \"input\", 29);\n    i0.ɵɵlistener(\"change\", function AdminAddProductsComponent_ng_container_63_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.colorChanged($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 30);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const color_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"name\", color_r4.name);\n    i0.ɵɵpropertyInterpolate(\"id\", color_r4.name);\n    i0.ɵɵpropertyInterpolate(\"value\", color_r4.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", color_r4.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", color_r4.name, \" \");\n  }\n}\n\nfunction AdminAddProductsComponent_ng_container_67_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 31)(2, \"input\", 29);\n    i0.ɵɵlistener(\"change\", function AdminAddProductsComponent_ng_container_67_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.sizeChanged($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 30);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const size_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"name\", size_r7.name);\n    i0.ɵɵpropertyInterpolate(\"id\", size_r7.name);\n    i0.ɵɵpropertyInterpolate(\"value\", size_r7.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", size_r7.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", size_r7.name, \" \");\n  }\n}\n\nexport let AdminAddProductsComponent = /*#__PURE__*/(() => {\n  class AdminAddProductsComponent {\n    constructor(httpClient, snackBar) {\n      this.httpClient = httpClient;\n      this.snackBar = snackBar;\n      this.activeImageUploadControlName = '';\n      this.availableColors = [];\n      this.availableSizes = [];\n      this.availableCategories = [];\n      this.productForm = new FormGroup({\n        name: new FormControl(''),\n        mainImage: new FormControl(''),\n        quantityAvailable: new FormControl(''),\n        image2: new FormControl(''),\n        image3: new FormControl(''),\n        category: new FormControl(''),\n        description: new FormControl(''),\n        ngn: new FormControl(''),\n        usd: new FormControl(''),\n        shippingDetails: new FormControl(`<p><em><strong>Shipping</strong></em></p>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur tristique, risus eu vestibulum dapibus, leo tortor feugiat elit, vel consequat libero mi eget purus.&nbsp;</p>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur tristique, risus eu vestibulum dapibus, leo tortor feugiat elit, vel consequat libero mi eget purus.&nbsp;</p>\n`),\n        careInstructions: new FormControl(`<p><em><strong>Care Instructions</strong></em></p>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur tristique, risus eu vestibulum dapibus, leo tortor feugiat elit, vel consequat libero mi eget purus.&nbsp;</p>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur tristique, risus eu vestibulum dapibus, leo tortor feugiat elit, vel consequat libero mi eget purus.&nbsp;</p>\n`)\n      });\n      this.categoryNameToId = {};\n      this.colorSelectionMap = {};\n      this.sizeSelectionMap = {};\n    }\n\n    whoslit() {\n      console.log(this.productForm.controls.shippingDetails.value);\n      console.log(this.productForm.controls.careInstructions.value);\n    }\n\n    ngOnInit() {\n      this.uploadWidget = cloudinary.createUploadWidget({\n        cloudName: 'ltrzxluwr',\n        uploadPreset: 'b9awz5dy',\n        // cropping: true, //add a cropping step\n        // showAdvancedOptions: true,  //add advanced options (public_id and tag)\n        sources: ['local', 'url'],\n        multiple: false,\n        // folder: \"user_images\", //upload files to the specified folder\n        // tags: [\"users\", \"profile\"], //add the given tags to the uploaded files\n        // context: {alt: \"user_uploaded\"}, //add the given context data to the uploaded files\n        clientAllowedFormats: ['png', 'PNG', 'jpg', 'JPG', 'JPEG', 'jpeg'],\n        maxImageFileSize: 20000000 //restrict file size to less than 2MB\n        // maxImageWidth: 2000, //Scales the image down to a width of 2000 pixels before uploading\n        // theme: \"purple\", //change to a purple theme\n\n      }, (error, result) => {\n        var _a;\n\n        if (!error && result && result.event === 'success') {\n          (_a = this.productForm.get(this.activeImageUploadControlName)) === null || _a === void 0 ? void 0 : _a.setValue(result.info.secure_url);\n        } else if (error) {\n          this.snackBar.open('Error uploading image', 'Done', {\n            panelClass: ['warning-snackbar']\n          });\n        }\n      });\n      const colorsRequest$ = this.httpClient.get('/api/colors');\n      const sizesRequest$ = this.httpClient.get('/api/sizes');\n      const productCategories$ = this.httpClient.get('/api/productCategories');\n      forkJoin([colorsRequest$, sizesRequest$, productCategories$]).pipe(map(([colors, sizes, productCategories]) => ({\n        colors,\n        sizes,\n        productCategories\n      }))).subscribe(({\n        colors,\n        sizes,\n        productCategories\n      }) => {\n        this.availableCategories = productCategories;\n        this.availableColors = colors;\n        this.availableSizes = sizes;\n\n        for (const color of this.availableColors) {\n          this.colorSelectionMap[color.name] = false;\n        }\n\n        for (const size of this.availableSizes) {\n          this.sizeSelectionMap[size.name] = false;\n        }\n\n        this.categoryNameToId = this.availableCategories.reduce((acc, curr) => {\n          acc[curr.name] = curr.id;\n          return acc;\n        }, {});\n      });\n    }\n\n    colorChanged(data) {\n      if (data.target.checked) {\n        this.colorSelectionMap[data.target.value] = true;\n      } else {\n        this.colorSelectionMap[data.target.value] = false;\n      }\n    }\n\n    sizeChanged(data) {\n      if (data.target.checked) {\n        this.sizeSelectionMap[data.target.value] = true;\n      } else {\n        this.sizeSelectionMap[data.target.value] = false;\n      }\n    }\n\n    clearInputs() {\n      this.productForm.reset();\n    }\n\n    showFormValues() {\n      console.log(this.productForm.controls);\n    }\n\n    isChecked(color, allColors) {\n      return allColors.includes(color);\n    }\n\n    get getMainImage() {\n      return this.productForm.controls.mainImage.value ? this.productForm.controls.mainImage.value : 'https://socialistmodernism.com/wp-content/uploads/2017/07/placeholder-image.png?w=640';\n    }\n\n    getImageByIndex(index) {\n      switch (index) {\n        case 1:\n          return this.productForm.controls.image2.value;\n\n        case 2:\n          return this.productForm.controls.image3.value;\n\n        default:\n          return this.productForm.controls.mainImage.value;\n      }\n    }\n\n    getSelectedColorIds() {\n      const selectedColors = [];\n\n      for (const aColor of this.availableColors) {\n        if (this.colorSelectionMap[aColor.name]) {\n          selectedColors.push(aColor.id);\n        }\n      }\n\n      return selectedColors;\n    }\n\n    getSelectedSizeIds() {\n      const selectedSizes = [];\n\n      for (const aSize of this.availableSizes) {\n        if (this.sizeSelectionMap[aSize.name]) {\n          selectedSizes.push(aSize.id);\n        }\n      }\n\n      return selectedSizes;\n    }\n\n    openWidget(controlName) {\n      this.activeImageUploadControlName = controlName;\n      this.uploadWidget.open();\n    }\n\n    submitNewProduct() {\n      // Verify the presence of the required fields.\n      const formControls = this.productForm.controls;\n      const selectedColorIds = this.getSelectedColorIds();\n      const selectedSizeIds = this.getSelectedSizeIds();\n      let errorMessage = '';\n\n      if (!formControls.name.value) {\n        errorMessage = 'A name is required';\n      } else if (formControls.quantityAvailable.value === '' || formControls.quantityAvailable.value < 0 || formControls.quantityAvailable.value > 10000) {\n        errorMessage = 'Quantity available must be between 0 and 10000 (inclusive)';\n      } else if (!formControls.mainImage.value) {\n        errorMessage = 'A main image is required';\n      } else if (!formControls.description.value) {\n        errorMessage = 'A description is required';\n      } else if (!formControls.ngn.value || formControls.ngn.value < 0) {\n        errorMessage = 'An non-negative NGN price is required';\n      } else if (!formControls.usd.value || formControls.usd.value < 0) {\n        errorMessage = 'A non-negative USD price is required';\n      } else if (!formControls.category.value) {\n        errorMessage = 'A category must be selected';\n      } else if (selectedColorIds.length === 0) {\n        errorMessage = 'At least one color must be selected';\n      } else if (selectedSizeIds.length === 0) {\n        errorMessage = 'At least one size must be selected';\n      }\n\n      if (errorMessage) {\n        this.snackBar.open(errorMessage, 'Done', {\n          panelClass: ['warning-snackbar']\n        });\n        return;\n      }\n\n      const categoryId = this.categoryNameToId[formControls.category.value];\n      this.httpClient.post('/api/products/createProduct', {\n        token: '',\n        name: formControls.name.value,\n        quantityAvailable: formControls.quantityAvailable.value,\n        ngn: formControls.ngn.value,\n        usd: formControls.usd.value,\n        description: formControls.description.value,\n        categoryId: categoryId,\n        colors: selectedColorIds,\n        sizes: selectedSizeIds,\n        images: [this.productForm.controls.mainImage.value, this.productForm.controls.image2.value, this.productForm.controls.image3.value]\n      }).subscribe(data => {\n        if (data.message === 'success') {\n          this.snackBar.open('Successfully created product', 'Done', {\n            panelClass: ['success-snackbar']\n          });\n          this.productForm.reset();\n          return;\n        } else {\n          this.snackBar.open('An error occurred while trying to create the product', 'Done', {\n            panelClass: ['warning-snackbar']\n          });\n          return;\n        }\n      }, err => {\n        this.snackBar.open('An error occurred while trying to create the product', 'Done', {\n          panelClass: ['warning-snackbar']\n        });\n        return;\n      });\n    }\n\n  }\n\n  AdminAddProductsComponent.ɵfac = function AdminAddProductsComponent_Factory(t) {\n    return new (t || AdminAddProductsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  AdminAddProductsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminAddProductsComponent,\n    selectors: [[\"app-admin-add-products\"]],\n    decls: 71,\n    vars: 10,\n    consts: [[1, \"container-fluid\"], [1, \"comp-description\"], [1, \"new-product-holder\"], [1, \"restart-button\", 3, \"click\"], [1, \"new-product-form\", 3, \"formGroup\"], [2, \"text-align\", \"center\"], [2, \"width\", \"400px\", 3, \"src\"], [1, \"row\", \"product-alt-image-holder\"], [2, \"width\", \"150px\", 3, \"src\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [1, \"cat-label\"], [\"placeholder\", \"Some Product Name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"type\", \"number\", \"formControlName\", \"quantityAvailable\"], [1, \"upload-image-container\"], [1, \"upload-image-button\", 3, \"click\"], [\"placeholder\", \"Image URL 1\", \"type\", \"text\", \"formControlName\", \"mainImage\"], [\"placeholder\", \"Image URL 2\", \"type\", \"text\", \"formControlName\", \"image2\"], [\"placeholder\", \"Image URL 3\", \"type\", \"text\", \"formControlName\", \"image3\"], [\"required\", \"\", \"apiKey\", \"j3d37bnccr6elf4wt8p1czeigad73hxn2uqyp0e4uk6wf6ib\", \"formControlName\", \"description\", 3, \"inline\"], [\"placeholder\", \"20.00\", \"type\", \"number\", \"formControlName\", \"usd\"], [\"apiKey\", \"j3d37bnccr6elf4wt8p1czeigad73hxn2uqyp0e4uk6wf6ib\", \"formControlName\", \"shippingDetails\", 3, \"inline\"], [\"apiKey\", \"j3d37bnccr6elf4wt8p1czeigad73hxn2uqyp0e4uk6wf6ib\", \"formControlName\", \"careInstructions\", 3, \"inline\"], [3, \"click\"], [\"formControlName\", \"category\", \"name\", \"category\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"save-product-button\", 3, \"click\"], [3, \"value\"], [2, \"display\", \"inline-block\", \"width\", \"clamp(60px, 25%, 200px)\"], [\"type\", \"checkbox\", 3, \"name\", \"id\", \"value\", \"change\"], [2, \"margin-left\", \"10px\", 3, \"for\"], [2, \"display\", \"inline-block\", \"width\", \"clamp(30px, 15%, 80px)\"]],\n    template: function AdminAddProductsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\", 1)(2, \"span\");\n        i0.ɵɵtext(3, \" Add a new product \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"span\");\n        i0.ɵɵtext(5, \" - Add a new product to the site (The item name must be unique!) \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"div\")(8, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AdminAddProductsComponent_Template_button_click_8_listener() {\n          return ctx.clearInputs();\n        });\n        i0.ɵɵtext(9, \"RESTART\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"form\", 4)(11, \"div\", 5);\n        i0.ɵɵelement(12, \"img\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7);\n        i0.ɵɵelement(14, \"img\", 8)(15, \"img\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"fieldset\", 9)(17, \"div\", 10);\n        i0.ɵɵtext(18, \"Product Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\");\n        i0.ɵɵelement(20, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\")(22, \"div\", 10);\n        i0.ɵɵtext(23, \"Quantity Available\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 13)(26, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function AdminAddProductsComponent_Template_button_click_26_listener() {\n          return ctx.openWidget(\"mainImage\");\n        });\n        i0.ɵɵtext(27, \" Upload Image \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 13)(30, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function AdminAddProductsComponent_Template_button_click_30_listener() {\n          return ctx.openWidget(\"image2\");\n        });\n        i0.ɵɵtext(31, \" Upload Image \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 13)(34, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function AdminAddProductsComponent_Template_button_click_34_listener() {\n          return ctx.openWidget(\"image3\");\n        });\n        i0.ɵɵtext(35, \" Upload Image \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"fieldset\")(38, \"div\", 10);\n        i0.ɵɵtext(39, \"Product Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"editor\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"fieldset\", 9)(42, \"div\", 10);\n        i0.ɵɵtext(43, \"Dollar Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"fieldset\")(46, \"div\", 10);\n        i0.ɵɵtext(47, \"Shipping Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(48, \"editor\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"fieldset\")(50, \"div\", 10);\n        i0.ɵɵtext(51, \"Care Instructions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"editor\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function AdminAddProductsComponent_Template_button_click_53_listener() {\n          return ctx.whoslit();\n        });\n        i0.ɵɵtext(54, \"Print Content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"fieldset\")(56, \"div\", 10);\n        i0.ɵɵtext(57, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"select\", 23);\n        i0.ɵɵtemplate(59, AdminAddProductsComponent_option_59_Template, 2, 2, \"option\", 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(60, \"fieldset\")(61, \"div\", 10);\n        i0.ɵɵtext(62, \"Colors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(63, AdminAddProductsComponent_ng_container_63_Template, 5, 5, \"ng-container\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"fieldset\")(65, \"div\", 10);\n        i0.ɵɵtext(66, \"Sizes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(67, AdminAddProductsComponent_ng_container_67_Template, 5, 5, \"ng-container\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"div\", 5)(69, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function AdminAddProductsComponent_Template_button_click_69_listener() {\n          return ctx.submitNewProduct();\n        });\n        i0.ɵɵtext(70, \" SAVE PRODUCT \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"src\", ctx.getMainImage, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.getImageByIndex(1), i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.getImageByIndex(2), i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"inline\", true);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"inline\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"inline\", true);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.availableCategories);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.availableColors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.availableSizes);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.NumberValueAccessor, i4.EditorComponent, i3.RequiredValidator, i3.SelectControlValueAccessor, i5.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n    styles: [\".new-product-holder[_ngcontent-%COMP%]{margin:40px 0;background-color:#fff;padding:20px;border:2px solid black;display:flex;justify-content:center}.new-product-holder[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{box-shadow:0 2px 12px 3px #f1f4f1;padding:30px;border-radius:4px;width:900px}.new-product-form[_ngcontent-%COMP%]{width:60%;margin:0 auto}.restart-button[_ngcontent-%COMP%]{width:100px;color:#fff;background-color:#fca5a5;border-radius:3px;transition:.2s;border:none}.restart-button[_ngcontent-%COMP%]:hover{background-color:#ec7d7d}.save-product-button[_ngcontent-%COMP%]{background-color:#5ea5f8;color:#fff;padding:10px 30px;border-radius:6px;margin-top:18px;transition:.2s;border:none}.save-product-button[_ngcontent-%COMP%]:hover{background-color:#4898f3}.upload-image-button[_ngcontent-%COMP%]{background-color:#b9babb;color:#000;padding:4px 30px;border-radius:6px;transition:.2s;border:none;width:220px}.upload-image-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;margin-left:10px}.upload-image-button[_ngcontent-%COMP%]:hover{background-color:#4898f3}fieldset[_ngcontent-%COMP%]   editor[_ngcontent-%COMP%], input[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{margin:10px;padding:5px 5px 5px 10px;width:100%}fieldset[_ngcontent-%COMP%]   editor[_ngcontent-%COMP%]{border:1px solid;border-radius:2px}\", \".comp-description[_ngcontent-%COMP%]{font-family:Lato;font-weight:200;background-color:#fff;padding:20px}.comp-description[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:first-child{font-weight:500}header[_ngcontent-%COMP%]{border:2px solid black}.cat-label[_ngcontent-%COMP%]{color:#827f7f;font-weight:200}\"]\n  });\n  return AdminAddProductsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}