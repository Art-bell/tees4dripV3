{"ast":null,"code":"import { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../transformers/turn-to-identifier.pipe\";\n\nfunction AllProductsComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" No products match the given filter \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AllProductsComponent_div_14_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r7 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", category_r7.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r7.name, \" \");\n  }\n}\n\nfunction AllProductsComponent_div_14_ng_container_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 33);\n    i0.ɵɵelement(2, \"input\", 34);\n    i0.ɵɵpipe(3, \"turnIntoIdentifier\");\n    i0.ɵɵelementStart(4, \"label\", 35);\n    i0.ɵɵpipe(5, \"turnIntoIdentifier\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const color_r8 = ctx.$implicit;\n    const product_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"name\", color_r8.name);\n    i0.ɵɵpropertyInterpolate2(\"id\", \"\", color_r8.name, \"-\", i0.ɵɵpipeBind1(3, 8, product_r2.productName), \"\");\n    i0.ɵɵpropertyInterpolate(\"value\", color_r8.name);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.isChecked(color_r8.name, product_r2.colors));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate2(\"for\", \"\", color_r8.name, \"-\", i0.ɵɵpipeBind1(5, 10, product_r2.productName), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", color_r8.name, \" \");\n  }\n}\n\nfunction AllProductsComponent_div_14_ng_container_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵelement(2, \"input\", 34);\n    i0.ɵɵpipe(3, \"turnIntoIdentifier\");\n    i0.ɵɵelementStart(4, \"label\", 35);\n    i0.ɵɵpipe(5, \"turnIntoIdentifier\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const size_r10 = ctx.$implicit;\n    const product_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"name\", size_r10.name);\n    i0.ɵɵpropertyInterpolate2(\"id\", \"\", size_r10.name, \"-\", i0.ɵɵpipeBind1(3, 8, product_r2.productName), \"\");\n    i0.ɵɵpropertyInterpolate(\"value\", size_r10.name);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.isChecked(size_r10.name, product_r2.sizes));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate2(\"for\", \"\", size_r10.name, \"-\", i0.ɵɵpipeBind1(5, 10, product_r2.productName), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", size_r10.name, \" \");\n  }\n}\n\nfunction AllProductsComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AllProductsComponent_div_14_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const product_r2 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.openDeleteConfirmation(product_r2);\n    });\n    i0.ɵɵtext(3, \" DELETE \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 11);\n    i0.ɵɵelement(5, \"img\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 13);\n    i0.ɵɵelement(7, \"img\", 14)(8, \"img\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 15)(10, \"form\", 16, 17);\n    i0.ɵɵelement(12, \"input\", 18);\n    i0.ɵɵelementStart(13, \"fieldset\", 19);\n    i0.ɵɵelement(14, \"input\", 20);\n    i0.ɵɵelementStart(15, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function AllProductsComponent_div_14_Template_input_ngModelChange_15_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const product_r2 = restoredCtx.$implicit;\n      return product_r2.images[0] = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function AllProductsComponent_div_14_Template_input_ngModelChange_16_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const product_r2 = restoredCtx.$implicit;\n      return product_r2.images[1] = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function AllProductsComponent_div_14_Template_input_ngModelChange_17_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const product_r2 = restoredCtx.$implicit;\n      return product_r2.images[2] = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"fieldset\")(19, \"div\", 24);\n    i0.ɵɵtext(20, \"Quantity in Stock\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"fieldset\")(23, \"div\", 24);\n    i0.ɵɵtext(24, \"Price in USD\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"fieldset\")(27, \"div\", 24);\n    i0.ɵɵtext(28, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"textarea\", 27);\n    i0.ɵɵtext(30, \"              \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"fieldset\")(32, \"div\", 24);\n    i0.ɵɵtext(33, \"Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"select\", 28);\n    i0.ɵɵtemplate(35, AllProductsComponent_div_14_option_35_Template, 2, 2, \"option\", 29);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(36, \"fieldset\")(37, \"div\", 24);\n    i0.ɵɵtext(38, \"Colors\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(39, AllProductsComponent_div_14_ng_container_39_Template, 7, 12, \"ng-container\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"fieldset\")(41, \"div\", 24);\n    i0.ɵɵtext(42, \"Sizes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(43, AllProductsComponent_div_14_ng_container_43_Template, 7, 12, \"ng-container\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function AllProductsComponent_div_14_Template_button_click_44_listener() {\n      i0.ɵɵrestoreView(_r13);\n\n      const _r3 = i0.ɵɵreference(11);\n\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onSaveFormSubmit(_r3);\n    });\n    i0.ɵɵtext(45, \" SAVE CHANGES \");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const product_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"src\", product_r2.images[0], i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", product_r2.images[1], i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", product_r2.images[2], i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", product_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", product_r2.productName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", product_r2.images[0]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", product_r2.images[1]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", product_r2.images[2]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", product_r2.quantityAvailable);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", product_r2.usd);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", product_r2.description);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", product_r2.category.toLowerCase());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.availableCategories);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.availableColors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.availableSizes);\n  }\n}\n\nconst _c0 = \".existing-product[_ngcontent-%COMP%]{padding:30px;margin:20px 50px 50px;border:2px solid;box-shadow:#0000003d 0 3px 8px;display:flex;flex-direction:column;justify-content:space-between}.cancel-button[_ngcontent-%COMP%]{width:100px;background-color:#fff;border-radius:3px;transition:.2s;border:none}.cancel-button[_ngcontent-%COMP%]:hover{background-color:#efefef}.delete-button[_ngcontent-%COMP%]{width:100px;color:#fff;background-color:#fca5a5;border-radius:3px;transition:.2s;border:none}.delete-button[_ngcontent-%COMP%]:hover{background-color:#ec7d7d}.dialog-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;gap:12px}.product-image-holder[_ngcontent-%COMP%]{justify-content:center;margin-top:25px}.product-filter[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{margin:10px;padding:5px 5px 5px 10px;width:90%}.product-filter[_ngcontent-%COMP%]{margin:12px 36px}.main-dialog[_ngcontent-%COMP%]{background-color:#fff;padding:30px;display:flex;flex-direction:column;gap:24px}.update-product-form[_ngcontent-%COMP%], .update-product-form[_ngcontent-%COMP%]   fieldset[_ngcontent-%COMP%]{display:flex;align-items:center}.update-product-form[_ngcontent-%COMP%], .update-product-form[_ngcontent-%COMP%]   fieldset.centered[_ngcontent-%COMP%]{justify-content:center;flex-direction:column}.cat-label[_ngcontent-%COMP%]{color:#827f7f;font-weight:200}.update-product-form[_ngcontent-%COMP%]   fieldset[_ngcontent-%COMP%]:not(.centered){width:90%;border:2px solid #d5d4d4;padding:8px;margin:4px 0}.update-product-form[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]{margin:10px;padding:5px 5px 5px 10px;width:90%;outline:yellowgreen}.update-product-form-holder[_ngcontent-%COMP%]{justify-content:center}.save-changes-button[_ngcontent-%COMP%]{background-color:#5ea5f8;color:#fff;padding:10px 30px;border-radius:6px;margin-top:18px;transition:.2s;border:none}.save-changes-button[_ngcontent-%COMP%]:hover{background-color:#4898f3}.existing-products-holder[_ngcontent-%COMP%]{border:2px solid black;background-color:#fff;min-height:500px;margin-top:30px;display:flex;justify-content:center}form[_ngcontent-%COMP%]   fieldset[_ngcontent-%COMP%]{flex-direction:row!important;flex-wrap:wrap}form[_ngcontent-%COMP%]   fieldset[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{width:100%}textarea[_ngcontent-%COMP%]{width:100%;border:1px solid silver;border-radius:4px}\";\nconst _c1 = \".comp-description[_ngcontent-%COMP%]{font-family:Lato;font-weight:200;background-color:#fff;padding:20px}.comp-description[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:first-child{font-weight:500}header[_ngcontent-%COMP%]{border:2px solid black}.cat-label[_ngcontent-%COMP%]{color:#827f7f;font-weight:200}\";\nexport let AllProductsComponent = /*#__PURE__*/(() => {\n  class AllProductsComponent {\n    constructor(httpClient, snackBar, dialog) {\n      this.httpClient = httpClient;\n      this.snackBar = snackBar;\n      this.dialog = dialog;\n      this.productFilter = '';\n      this.allAvailableProducts = [];\n      this.filteredAvailableProducts = [];\n      this.availableColors = [];\n      this.availableSizes = [];\n      this.availableCategories = [];\n      this.categoryNameToId = {};\n      this.updateForm = new FormGroup({\n        id: new FormControl(''),\n        category: new FormControl(''),\n        mainImage: new FormControl(''),\n        image2: new FormControl(''),\n        image3: new FormControl(''),\n        desc: new FormControl(''),\n        usd: new FormControl(''),\n        colors: new FormArray([]),\n        size: new FormArray([])\n      });\n    }\n\n    ngOnInit() {\n      // Get all color options\n      const colorsRequest$ = this.httpClient.get('/api/colors');\n      const sizesRequest$ = this.httpClient.get('/api/sizes');\n      const productCategories$ = this.httpClient.get('/api/productCategories');\n      const products$ = this.httpClient.get('/api/products/findAllAdmin', {\n        params: {\n          key: ''\n        }\n      });\n      forkJoin([colorsRequest$, sizesRequest$, productCategories$, products$]).pipe(map(([colors, sizes, categories, products]) => {\n        return {\n          colors,\n          sizes,\n          categories,\n          products\n        };\n      })).subscribe(values => {\n        this.availableCategories = values.categories;\n        this.categoryNameToId = this.availableCategories.reduce((acc, curr) => {\n          acc[curr.name] = curr.id;\n          return acc;\n        }, {});\n        this.availableColors = values.colors;\n        this.availableSizes = values.sizes;\n        this.allAvailableProducts = values.products.results.map(p => this.processProducts(p));\n        this.filteredAvailableProducts = [...this.allAvailableProducts];\n      });\n    }\n\n    openDeleteConfirmation(product) {\n      const dialogRef = this.dialog.open(DeleteProductConfirmationDialog, {\n        data: {\n          id: product.id,\n          name: product.productName\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result.deleted) {\n          // Fetch new data\n          this.httpClient.get('/api/products/findAllAdmin', {\n            params: {\n              key: ''\n            }\n          }).subscribe(res => {\n            this.allAvailableProducts = res.results.map(p => this.processProducts(p));\n            this.filteredAvailableProducts = [...this.allAvailableProducts];\n          });\n        }\n      });\n    }\n\n    onSearch(event) {\n      if (event) {\n        this.filteredAvailableProducts = this.allAvailableProducts.filter(product => {\n          return product.productName.toLowerCase().includes(this.productFilter.toLowerCase());\n        });\n      } else {\n        this.filteredAvailableProducts = [...this.allAvailableProducts];\n      }\n    }\n\n    onSaveFormSubmit(form) {\n      const formValues = form.value; // Update format:\n\n      const id = formValues.id;\n      const name = formValues.name;\n      const mainImage = formValues.mainImage;\n      const quantityAvailable = formValues.quantityAvailable;\n      const altImage1 = formValues.altImage1;\n      const altImage2 = formValues.altImage2;\n      const usdPrice = formValues.priceUsd;\n      const description = formValues.description;\n      const category = this.categoryNameToId[formValues.category];\n      const colors = this.getBaseItemId(formValues, this.availableColors);\n      const sizes = this.getBaseItemId(formValues, this.availableSizes);\n      let errorMessage = '';\n\n      if (!mainImage) {\n        errorMessage = 'A main image is required before saving';\n      } else if (!usdPrice || usdPrice < 0) {\n        errorMessage = 'A non-negative  USD price is required before saving';\n      } else if (!description) {\n        errorMessage = 'A description is required before saving';\n      } else if (!name) {\n        errorMessage = 'A name is required before saving';\n      } else if (quantityAvailable < 0 || quantityAvailable > 10000) {\n        errorMessage = 'Quantity available must be between 0 and 10000 (inclusive)';\n      } else if (colors.length === 0) {\n        errorMessage = 'At least one color must be selected';\n      } else if (sizes.length === 0) {\n        errorMessage = 'At least one size must be selected';\n      }\n\n      if (errorMessage) {\n        this.snackBar.open(errorMessage, 'Done', {\n          panelClass: ['warning-snackbar']\n        });\n        return;\n      }\n\n      const data = {\n        id,\n        name,\n        description,\n        quantityAvailable,\n        mainImage,\n        altImage1,\n        altImage2,\n        category,\n        usdPrice,\n        colors,\n        sizes\n      };\n      this.httpClient.post('/api/products/updateProduct', data).subscribe(res => {\n        this.snackBar.open('Successfully updated product', 'Done', {\n          panelClass: ['success-snackbar']\n        });\n        return;\n      }, err => {\n        this.snackBar.open('An error occurred while trying to create the product', 'Done', {\n          panelClass: ['warning-snackbar']\n        });\n        return;\n      }); // TODO verify the images before adding to images array.\n      // {\n      //   'id': 'ProductId',\n      //   'name': 'product name',\n      //   'description': 'product description',\n      //   'image1': \"ImageUrl\",\n      //   'image2': \"ImageUrl\",\n      //   'image3': \"ImageUrl\",\n      //   'ngn': 'Price in NGN',\n      //   'usd': 'Price in USD',\n      //   'category': 'Product Category',\n      //   'sizes': [IDs for each relevant size],\n      //   'colors': [IDs for colros]\n      // }\n      // updateForm = new FormGroup({\n      //   id: new FormControl(''),\n      //   category: new FormControl(''),\n      //   mainImage: new FormControl(''),\n      //   image2: new FormControl(''),\n      //   image3: new FormControl(''),\n      //   desc: new FormControl(''),\n      //   ngn: new FormControl(''),\n      //   usd: new FormControl(''),\n      //   colors: new FormArray([]),\n      //   size: new FormArray([]),\n      // });\n      // make http request for this product ID with all the new data\n    }\n\n    getBaseItemId(value, availableList) {\n      const ids = [];\n\n      for (let baseItem of availableList) {\n        if (value[baseItem.name]) {\n          ids.push(baseItem.id);\n        }\n      }\n\n      return ids;\n    }\n\n    processProducts(product) {\n      return {\n        id: product.id,\n        description: product.description,\n        quantityAvailable: product.quantityAvailable,\n        category: product.category,\n        productName: product.productName,\n        usd: product.usd,\n        sizes: product.sizes.split(','),\n        colors: product.colors.split(','),\n        images: product.images.split(','),\n        mainImage: product.images.split(',')[0]\n      };\n    }\n\n    isChecked(color, allColors) {\n      return allColors.includes(color);\n    }\n\n  }\n\n  AllProductsComponent.ɵfac = function AllProductsComponent_Factory(t) {\n    return new (t || AllProductsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  AllProductsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AllProductsComponent,\n    selectors: [[\"app-all-products\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"container-fluid\"], [1, \"comp-description\"], [1, \"existing-products-holder\"], [1, \"row\", 2, \"justify-content\", \"space-between !important\"], [1, \"product-filter\"], [\"placeholder\", \"some product name\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"class\", \"existing-product col-5\", 4, \"ngFor\", \"ngForOf\"], [1, \"existing-product\", \"col-5\"], [1, \"row\"], [1, \"delete-button\", 3, \"click\"], [1, \"row\", \"product-image-holder\"], [2, \"width\", \"300px\", 3, \"src\"], [1, \"row\", \"product-alt-image-holder\"], [2, \"width\", \"150px\", 3, \"src\"], [1, \"row\", \"update-product-form-holder\"], [1, \"update-product-form\"], [\"productForm\", \"ngForm\"], [\"hidden\", \"\", \"name\", \"id\", 3, \"ngModel\"], [1, \"centered\"], [\"type\", \"text\", \"name\", \"name\", 3, \"ngModel\"], [\"type\", \"text\", \"name\", \"mainImage\", \"placeholder\", \"Main Image\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"altImage1\", \"placeholder\", \"Alt Image 1\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"altImage2\", \"placeholder\", \"Alt Image 2\", 3, \"ngModel\", \"ngModelChange\"], [1, \"cat-label\"], [\"name\", \"quantityAvailable\", \"type\", \"text\", 3, \"ngModel\"], [\"name\", \"priceUsd\", \"type\", \"text\", 3, \"ngModel\"], [\"name\", \"description\", 3, \"ngModel\"], [\"name\", \"category\", 3, \"ngModel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"save-changes-button\", 3, \"click\"], [3, \"value\"], [2, \"display\", \"inline-block\", \"width\", \"clamp(60px, 25%, 200px)\"], [\"type\", \"checkbox\", 3, \"name\", \"ngModel\", \"id\", \"value\"], [2, \"margin-left\", \"10px\", 3, \"for\"], [2, \"display\", \"inline-block\", \"width\", \"clamp(30px, 15%, 80px)\"]],\n    template: function AllProductsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\", 1)(2, \"span\");\n        i0.ɵɵtext(3, \" All Products \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"span\");\n        i0.ɵɵtext(5, \" - Manage all the products currently available on the site \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"div\", 3)(8, \"div\", 4)(9, \"h3\");\n        i0.ɵɵtext(10, \"Filter products by name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\")(12, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AllProductsComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.productFilter = $event;\n        })(\"ngModelChange\", function AllProductsComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.onSearch($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(13, AllProductsComponent_div_13_Template, 2, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, AllProductsComponent_div_14_Template, 46, 15, \"div\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.productFilter);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filteredAvailableProducts.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredAvailableProducts);\n      }\n    },\n    directives: [i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.NgIf, i5.NgForOf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.SelectControlValueAccessor, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.CheckboxControlValueAccessor],\n    pipes: [i6.TurnIntoIdentifierPipe],\n    styles: [_c0, _c1]\n  });\n  return AllProductsComponent;\n})();\nexport let DeleteProductConfirmationDialog = /*#__PURE__*/(() => {\n  class DeleteProductConfirmationDialog {\n    constructor(data, snackBar, httpClient, dialogRef) {\n      this.data = data;\n      this.snackBar = snackBar;\n      this.httpClient = httpClient;\n      this.dialogRef = dialogRef;\n    }\n\n    onCancel() {\n      this.dialogRef.close({\n        deleted: false\n      });\n    }\n\n    onDeleteFormSubmit(id) {\n      // Delete this specific product ID from the database\n      this.httpClient.post('/api/products/deleteProduct', {\n        id\n      }).subscribe(res => {\n        this.snackBar.open(`Successfully delete product ${this.data.name}`, 'Done', {\n          panelClass: ['success-snackbar']\n        });\n        this.dialogRef.close({\n          deleted: true\n        }); // On success, show snack bar message, send data back to parent with a signal to refresh\n      });\n    }\n\n  }\n\n  DeleteProductConfirmationDialog.ɵfac = function DeleteProductConfirmationDialog_Factory(t) {\n    return new (t || DeleteProductConfirmationDialog)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i3.MatDialogRef));\n  };\n\n  DeleteProductConfirmationDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeleteProductConfirmationDialog,\n    selectors: [[\"delete-product-dialog\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[1, \"main-dialog\"], [2, \"font-weight\", \"bold\"], [1, \"dialog-actions\"], [1, \"cancel-button\", 3, \"click\"], [1, \"delete-button\", 3, \"click\"]],\n    template: function DeleteProductConfirmationDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n        i0.ɵɵtext(2, \" Are you sure you want to delete \");\n        i0.ɵɵelementStart(3, \"span\", 1);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \" ? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function DeleteProductConfirmationDialog_Template_button_click_7_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(8, \"CANCEL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function DeleteProductConfirmationDialog_Template_button_click_9_listener() {\n          return ctx.onDeleteFormSubmit(ctx.data.id);\n        });\n        i0.ɵɵtext(10, \" DELETE \");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.data.name);\n      }\n    },\n    styles: [_c0, _c1]\n  });\n  return DeleteProductConfirmationDialog;\n})();","map":null,"metadata":{},"sourceType":"module"}