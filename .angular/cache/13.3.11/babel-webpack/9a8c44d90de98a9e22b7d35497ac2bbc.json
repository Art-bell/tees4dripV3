{"ast":null,"code":"import { sha512 } from 'js-sha512';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.userToken = '';\n      this.cartId = -1;\n      this.cartTotalSubject = new BehaviorSubject(0);\n      this.orderNumberSubject = new Subject();\n      this.orderNumber = '';\n      this.cartItemsSubject = new BehaviorSubject([]);\n      this.loadingSubject = new BehaviorSubject(false); // When we start out, read the local storage token info.\n\n      let retrievedToken = localStorage.getItem('tees4dripUserToken');\n\n      if (!retrievedToken) {\n        localStorage.setItem('tees4dripUserToken', sha512(this.makeid(10)));\n        retrievedToken = localStorage.getItem('tees4dripUserToken');\n      }\n\n      this.userToken = retrievedToken;\n      this.orderNumberSubject.subscribe(newNumber => {\n        this.orderNumber = newNumber;\n      });\n      this.fetchCartData();\n    }\n\n    fetchCartData() {\n      this.loadingSubject.next(true);\n      this.http.get('/api/carts', {\n        params: {\n          userToken: this.getUserToken(),\n          someExtra: '500'\n        }\n      }).subscribe(res => {\n        this.cartItemsSubject.next(res);\n        this.cartTotalSubject.next(this.cartItemsSubject.value.map(ci => ci.price).reduce((prev, next) => prev + next, 0));\n        this.loadingSubject.next(false);\n      });\n    }\n\n    getUserToken() {\n      return this.userToken;\n    }\n\n    setUserToken(userToken) {\n      this.userToken = userToken;\n    }\n\n    getLoadingSubject() {\n      return this.loadingSubject;\n    }\n\n    getCartItemsSubject() {\n      return this.cartItemsSubject;\n    }\n\n    getCartId() {\n      return this.cartId;\n    }\n\n    setCartId(cartId) {\n      this.cartId = cartId;\n    }\n\n    getCartTotalSubject() {\n      return this.cartTotalSubject;\n    }\n\n    setOrderNumber(orderNumber) {\n      this.orderNumberSubject.next(orderNumber);\n    }\n\n    getOrderNumer() {\n      return this.orderNumber;\n    }\n\n    makeid(length) {\n      var result = '';\n      var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var charactersLength = characters.length;\n\n      for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n\n      return result;\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}