{"ast":null,"code":"import { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/filter.service\";\nimport * as i2 from \"mdb-angular-ui-kit/accordion\";\nimport * as i3 from \"@fortawesome/angular-fontawesome\";\nimport * as i4 from \"@angular/common\";\n\nfunction ColorComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 5);\n    i0.ɵɵelement(3, \"fa-icon\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.filterName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"icon\", ctx_r0.faChevronDown);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"invert\": a0\n  };\n};\n\nfunction ColorComponent_ng_template_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"input\", 10);\n    i0.ɵɵlistener(\"change\", function ColorComponent_ng_template_4_div_1_Template_input_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.addFilter($event, ctx_r4.filterName, item_r3);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 11);\n    i0.ɵɵelement(3, \"div\", 12);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", item_r3)(\"checked\", ctx_r2.activated(ctx_r2.filterName, item_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", item_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", item_r3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, item_r3 === \"black\"));\n  }\n}\n\nfunction ColorComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, ColorComponent_ng_template_4_div_1_Template, 4, 8, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.colors);\n  }\n}\n\nexport let ColorComponent = /*#__PURE__*/(() => {\n  class ColorComponent {\n    constructor(filterService) {\n      this.filterService = filterService;\n      this.filterName = \"Color\";\n      this.colors = [\"red\", \"white\", \"blue\", \"green\", \"grey\", \"yellow\", \"purple\", \"brown\", \"pink\", \"black\"];\n      this.faChevronDown = faChevronDown;\n    }\n\n    ngOnInit() {}\n\n    addFilter(event, filterName, value) {\n      const isChecked = event.srcElement.checked;\n      const allFilters = this.filterService.getFilters();\n\n      if (!Object.keys(allFilters).includes(filterName)) {\n        console.log(filterName, \"Filters not changed since the filter does not exist\");\n        return;\n      }\n\n      if (isChecked) {\n        // Add to filter list.\n        // Check if it exists in the array already\n        if (allFilters[filterName].includes(value)) {\n          console.log(\"Item not added since it is already included\");\n          return;\n        }\n\n        allFilters[filterName].push(value);\n      } else {\n        // Remove from filter list.\n        const index = allFilters[filterName].indexOf(value);\n\n        if (index > -1) {\n          allFilters[filterName].splice(index, 1);\n        }\n      }\n    }\n\n    activated(filterName, item) {\n      return this.filterService.getFilters()[filterName].includes(item);\n    }\n\n  }\n\n  ColorComponent.ɵfac = function ColorComponent_Factory(t) {\n    return new (t || ColorComponent)(i0.ɵɵdirectiveInject(i1.FilterService));\n  };\n\n  ColorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ColorComponent,\n    selectors: [[\"color-filter\"]],\n    inputs: {\n      filterName: \"filterName\",\n      colors: \"colors\"\n    },\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"container-fluid\", \"px-0\"], [3, \"flush\", \"multiple\"], [\"mdbAccordionItemHeader\", \"\"], [\"mdbAccordionItemBody\", \"\"], [1, \"filter-header\"], [1, \"filter-expansion\"], [3, \"icon\"], [1, \"row\", \"colors-wrapper\"], [\"class\", \"col-xl-2 col-lg-2 col-md-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-xl-2\", \"col-lg-2\", \"col-md-2\"], [\"hidden\", \"true\", \"type\", \"checkbox\", \"value\", \"\", 3, \"id\", \"checked\", \"change\"], [3, \"for\"], [1, \"color-circle\", 3, \"ngClass\"]],\n    template: function ColorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mdb-accordion\", 1)(2, \"mdb-accordion-item\");\n        i0.ɵɵtemplate(3, ColorComponent_ng_template_3_Template, 4, 2, \"ng-template\", 2);\n        i0.ɵɵtemplate(4, ColorComponent_ng_template_4_Template, 2, 1, \"ng-template\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"flush\", true)(\"multiple\", true);\n      }\n    },\n    directives: [i2.MdbAccordionComponent, i2.MdbAccordionItemComponent, i2.MdbAccordionItemHeaderDirective, i3.FaIconComponent, i2.MdbAccordionItemBodyDirective, i4.NgForOf, i4.NgClass],\n    styles: [\".color-circle[_ngcontent-%COMP%]{height:18px;width:18px;border-radius:50%;display:inline-block;border:1px solid black}input[type=checkbox][_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{border:3px solid #383838}input[type=checkbox][_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%] > div.invert[_ngcontent-%COMP%]{border:3px solid navajowhite}.color-circle[_ngcontent-%COMP%]:hover{border:3px solid silver;cursor:pointer}.colors-wrapper[_ngcontent-%COMP%]{width:90%;margin-top:18px}\"]\n  });\n  return ColorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}